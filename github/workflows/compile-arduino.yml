name: Arduino Compilation

on:
  repository_dispatch:
    types: [compile-arduino]

jobs:
  compile:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v1
      with:
        version: '1.0.4'
    
    - name: Create sketch
      run: |
        mkdir -p sketches/${{ github.event.client_payload.filename }}
        echo '${{ github.event.client_payload.code }}' > sketches/${{ github.event.client_payload.filename }}/${{ github.event.client_payload.filename }}.ino
    
    - name: Install board cores
      run: |
        arduino-cli core update-index
        arduino-cli core install arduino:avr
        arduino-cli core install esp32:esp32 --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
    
    - name: Compile sketch
      run: |
        arduino-cli compile --fqbn ${{ github.event.client_payload.fqbn }} \
          --output-dir builds/${{ github.event.client_payload.filename }} \
          --verbose \
          sketches/${{ github.event.client_payload.filename }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.client_payload.filename }}-firmware
        path: builds/${{ github.event.client_payload.filename }}/*.hex
        
    - name: Create release
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Arduino Build ${{ github.run_number }}
        body: |
          Compiled firmware for ${{ github.event.client_payload.fqbn }}
          Sketch: ${{ github.event.client_payload.filename }}
        draft: false
        prerelease: false
